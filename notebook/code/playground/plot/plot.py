from turtle import color
import numpy as np
import matplotlib.pyplot as plt
from matplotlib.ticker import FormatStrFormatter

def running_time_stage1():
    running_time = [1.5902659893035889, 1.8731236457824707, 1.3928027153015137, 1.2709667682647705, 1.4103672504425049, 1.0604734420776367, 1.5075395107269287, 1.3814046382904053, 0.5210928916931152, 1.578382968902588, 0.604917049407959, 1.6142516136169434, 2.489811897277832, 1.1875760555267334, 1.1694469451904297, 1.4112329483032227, 1.0749804973602295, 1.8622891902923584, 1.0514554977416992, 1.2115790843963623, 1.1077189445495605, 1.344665288925171, 1.2763478755950928, 1.2307238578796387, 0.9522318840026855, 1.4975543022155762, 1.5142021179199219, 1.384300708770752, 2.412663459777832, 1.6504335403442383, 2.1737923622131348, 1.2637813091278076, 1.309661626815796, 1.3013288974761963, 1.3354194164276123, 1.333522081375122, 1.8860042095184326, 1.5114660263061523, 1.4276211261749268, 1.001664400100708, 1.446481704711914, 1.3728275299072266, 1.0137042999267578, 2.047313690185547, 1.2379815578460693, 1.3984177112579346, 1.4309353828430176, 1.4000680446624756, 1.2584784030914307, 1.4110102653503418, 1.491290807723999, 1.3192884922027588, 1.5914628505706787, 1.7434613704681396, 1.4004716873168945, 1.0111212730407715, 1.368520736694336, 1.067129373550415, 1.2226262092590332, 1.4900026321411133, 1.2279706001281738, 1.4185936450958252, 0.9083836078643799, 2.003498077392578, 2.002307653427124, 1.4100143909454346, 2.2562882900238037, 1.4875414371490479, 1.0994000434875488, 1.0362627506256104, 1.1957893371582031, 1.2204234600067139, 0.7438325881958008, 1.2378864288330078, 1.3000330924987793, 1.5783915519714355, 1.0482325553894043, 1.3413233757019043, 1.3210880756378174, 1.3445947170257568, 1.3730130195617676, 1.4147896766662598, 1.4067301750183105, 1.3661918640136719, 1.107945442199707, 1.956817626953125]
    data = np.array(running_time)

    ax = plt.subplot()
    ax.boxplot([data])

    print(np.sum(data) / len(data))

    plt.xticks(color='w')
    plt.ylabel("seconds")

    plt.gcf().set_size_inches(4.2, 4.2)
    plt.savefig("/mnt/HD/School/A4/licenta/docs/doc/prod/img/evaluation/running_time-stage1.pdf")
    plt.show()

def pixel_reduction_stage1():
    pixels_reduced = [6692352, 6519748, 7314324, 7759584, 7844973, 8333172, 7452936, 7189376, 10401696, 6519748, 10361576, 7176936, 2937600, 7698128, 7494176, 6854124, 7966296, 5374588, 8231376, 7683236, 8008464, 7577496, 7386684, 7842156, 8499600, 6513456, 6597672, 7245936, 2820096, 6308416, 2930688, 7557196, 7512912, 7310928, 6881268, 7559136, 5513028, 7011216, 7310928, 8041037, 6936008, 7081596, 8025351, 4784784, 7513512, 6615808, 6940836, 7624236, 7859808, 7383936, 6389376, 7624236, 6496256, 6188736, 6838776, 8141556, 7118214, 8333172, 7642782, 6696896, 7452936, 7081596, 8333172, 5152696, 5081522, 6921984, 4075556, 6827140, 7920444, 8444124, 7782756, 7418232, 9145056, 7650540, 7616124, 6470336, 8174336, 7245936, 7706664, 7310928, 7310928, 7079896, 7245936, 7352268, 8174336, 6574716]
    data = np.array(pixels_reduced)

    ax = plt.subplot()
    ax.boxplot([data])

    print(np.sum(data) / len(data))

    plt.xticks(color='w')
    plt.ylabel("pixels")

    plt.gcf().set_size_inches(4, 4)
    plt.savefig("/mnt/HD/School/A4/licenta/docs/doc/prod/img/evaluation/no_of_pixels_reduced-stage1.pdf")
    plt.show()

def running_time_stage2():
    data = [4.652937173843384, 3.61124849319458, 7.748812675476074, 5.465561628341675, 5.592290878295898, 4.185656309127808, 3.6368274688720703, 3.658040761947632, 3.3223578929901123, 4.329177141189575, 4.380316495895386, 5.509527206420898, 4.451568365097046, 3.7958574295043945, 3.181518316268921, 3.5574796199798584, 4.56030797958374, 3.4522314071655273, 6.640941858291626, 3.525751829147339, 3.6776223182678223, 3.4447641372680664, 4.660001516342163, 3.5093507766723633, 3.404731512069702, 5.211695194244385, 5.535040616989136, 4.451119422912598, 4.448565244674683, 5.540568590164185, 3.263573408126831, 4.508769512176514, 4.573571681976318, 4.283503532409668, 3.791934013366699, 6.531917572021484, 4.408415079116821, 4.126355409622192, 3.3123321533203125, 4.615704298019409, 4.773023843765259, 3.390648365020752, 8.002615928649902, 4.421365976333618, 5.5535407066345215, 4.452844858169556, 3.282559394836426, 3.3925445079803467, 4.2309653759002686, 5.7124409675598145, 3.5113346576690674, 5.186303377151489, 4.75939679145813, 5.422474384307861, 4.5172834396362305, 5.2194297313690186, 4.226274728775024, 4.527362585067749, 3.2676191329956055, 7.765202522277832, 5.123512268066406, 8.617058515548706, 4.462730407714844, 3.5199058055877686, 3.3129515647888184, 3.5276236534118652, 4.565576553344727, 1.6716206073760986, 4.208294630050659, 4.346157073974609, 5.737337827682495, 3.613693952560425, 4.70092248916626, 4.385779619216919, 4.57017183303833, 4.412924766540527, 4.373595476150513, 4.490627765655518, 4.865916013717651, 3.65586519241333, 5.47871732711792]
    data = np.array(data)

    ax = plt.subplot()
    ax.boxplot([data])

    print(np.sum(data) / len(data))

    plt.xticks(color='w')
    plt.ylabel("seconds")

    plt.gcf().set_size_inches(4, 4)
    plt.savefig("/mnt/HD/School/A4/licenta/docs/doc/prod/img/evaluation/running_time-stage2.pdf")
    plt.show()

def pixel_reduction_stage2():
    data = [0.1166565898077152, 0.09276792515665731, 0.05205544288059566, 0.07656013880764356, 0.1196595693217123, 0.06365371439334441, 0.017907432261912954, 0.10412901994967995, 0.04225449240105418, 0.13343709641505233, 0.07906388814106878, 0.0943228737646999, 0.08175666037340046, 0.09634632559927345, 0.010332212982395237, 0.03162575060227967, 0.00839913144139705, 0.07668994680262668, 0.08304933762071974, 0.1366477578813541, 0.09505339498204521, 0.170401415637057, 0.1947743947449033, 0.0914607804416619, 0.12795035095298485, 0.0991960195047215, 0.11404356387937446, 0.10965240527884206, 0.1340895725033477, 0.06072447617966044, 0.0071451693056803, 0.14191121510513147, 0.11165963883507216, 0.024272379701769896, 0.05497080824667032, 0.08130360440547431, 0.04663755493926272, 0.0880428007031285, 0.06982655713099417, 0.09957850831721222, 0.09065511667221955, 0.1198954016379913, 0.15071687261284578, 0.10441280563666142, 0.05531060815355787, 0.03606444004717076, 0.046149501122763156, 0.024341548550877935, 0.13330570175438597, 0.07319679686599839, 0.11793481028775146, 0.05594730233787594, 0.001867354740061162, 0.12401256767662522, 0.03563555269120799, 0.045780668719887785, 0.04099421064350924, 0.06105661060312524, 0.06941494930158826, 0.12633539677584654, 0.059146523104959985, 0.08133491265038038, 0.06771991691675806, 0.1345654471290113, 0.1567124176955791, 0.09801234265280521, 0.11276079920383657, 0.10793388784085063, 0.08300608655712167, 0.11124998035959048, 0.09558206664717919, 0.08820670628183362, 0.12658876117496806, 0.1101541274669174, 0.07958004821057939, 0.12715583482696338, 0.04134752181314298, 0.061201362281822054, 0.1140213099030679, 0.07374442911714771, 0.10930451722969071]
    data = [1.0 - x for x in data]
    data = np.array(data)

    ax = plt.subplot()
    ax.boxplot([data])

    print(np.sum(data) / len(data))

    # plt.xticks(color='w')
    # plt.ylabel("pixels")

    # plt.gcf().set_size_inches(3, 3)
    # plt.savefig("/mnt/HD/School/A4/licenta/docs/doc/prod/img/evaluation/no_of_pixels_reduced-stage2.pdf")
    # plt.show()
    pass

def running_time_stage3():
    data = [10.490720510482788, 10.322288274765015, 10.331196308135986, 10.293629884719849, 10.412427186965942, 10.37221097946167, 10.252808570861816, 10.262587785720825, 10.471299886703491, 13.113648891448975, 10.424281120300293, 10.337945461273193, 10.242494344711304, 10.30012583732605, 10.360523223876953, 15.333458423614502, 10.351099729537964, 10.438917636871338, 10.468282461166382, 10.401822090148926, 1.003441333770752, 10.420260667800903, 10.52869200706482, 10.35584568977356, 10.516359567642212, 10.275671005249023, 10.379614114761353, 10.445200443267822, 10.257405996322632, 10.450197458267212, 10.433323621749878, 10.360897064208984, 10.249464750289917, 10.343647241592407, 10.489411354064941, 10.240167140960693, 10.688827753067017, 10.551658868789673, 10.241060256958008, 10.321341037750244, 10.417192697525024, 16.253156185150146, 10.480983018875122, 10.332216262817383, 2.259244918823242, 10.284735202789307, 10.568256378173828, 10.295559644699097, 10.385338068008423, 10.39147162437439, 10.526751279830933, 10.953052520751953, 1.5047404766082764, 10.343352794647217, 10.402393579483032, 10.361178874969482, 10.343462705612183, 10.393776655197144, 10.279681921005249, 10.268355369567871, 10.288407325744629]
    data = np.array(data)

    ax = plt.subplot()
    ax.hist(data, bins=40, color="blue", edgecolor="black")

    print(np.sum(data) / len(data))

    plt.xlabel("seconds")
    plt.xlim(0, np.max(data) + 0.5)
    plt.ylabel("no.")

    plt.gcf().set_size_inches(4, 4)
    plt.savefig("/mnt/HD/School/A4/licenta/docs/doc/prod/img/evaluation/running_time-stage3.pdf")
    plt.show()

def CERs_stage3():
    # data1 = CRC on all the images
    data1 = [1.0, 1.0, 1.0, 0.25, 1.0, 1.0, 0.2222222222222222, 0.11764705882352941, 0.3, 1.0, 0.3333333333333333, 0.0, 1.0, 0.0, 0.23529411764705882, 0.2, 1.0, 0.09523809523809523, 0.043478260869565216, 0.2972972972972973, 1.0, 1.0, 1.0, 0.4090909090909091, 0.35714285714285715, 0.043478260869565216, 0.375, 0.631578947368421, 1.0, 0.1111111111111111, 1.0, 1.0, 0.25, 1.0, 0.9285714285714286, 1.0, 0.25, 1.0, 1.0, 0.5555555555555556, 0.0, 0.0, 0.5555555555555556, 0.7083333333333334, 0.25, 1.0, 0.0, 0.3333333333333333, 0.6666666666666666, 0.0, 0.4583333333333333, 0.2647058823529412, 0.13953488372093023, 1.0, 0.15384615384615385, 0.6097560975609756, 0.0, 1.0, 0.26666666666666666, 0.047619047619047616, 0.1111111111111111]
    # data2 = CRC on the images where womething was recognized
    data2 = [1.0, 1.0, 1.0, 0.25, 1.0, 1.0, 0.2222222222222222, 0.11764705882352941, 0.3, 1.0, 0.3333333333333333, 0.0, 1.0, 0.0, 0.23529411764705882, 0.2, 1.0, 0.09523809523809523, 0.043478260869565216, 0.2972972972972973, 1.0, 1.0, 1.0, 0.4090909090909091, 0.35714285714285715, 0.043478260869565216, 0.375, 0.631578947368421, 1.0, 0.1111111111111111, 1.0, 1.0, 0.25, 1.0, 0.9285714285714286, 1.0, 0.25, 1.0, 1.0, 0.5555555555555556, 0.0, 0.0, 0.5555555555555556, 0.7083333333333334, 0.25, 1.0, 0.0, 0.3333333333333333, 0.6666666666666666, 0.0, 0.4583333333333333, 0.2647058823529412, 0.13953488372093023, 1.0, 0.15384615384615385, 0.6097560975609756, 0.0, 1.0, 0.26666666666666666, 0.047619047619047616, 0.1111111111111111]
    data2 = list(filter(lambda x: x != 1.0, data2))
    # data3 = CRC only on recognized words
    data3 = [1.0, 1.0, 1.0, 0.25, 1.0, 1.0, 0.2222222222222222, 0.11764705882352941, 0.3, 1.0, 0.3333333333333333, 0.0, 1.0, 0.0, 0.23529411764705882, 0.2, 1.0, 0.09523809523809523, 0.043478260869565216, 0.2972972972972973, 1.0, 1.0, 1.0, 0.4090909090909091, 0.35714285714285715, 0.043478260869565216, 0.375, 0.631578947368421, 1.0, 0.1111111111111111, 1.0, 1.0, 0.25, 1.0, 0.0, 1.0, 0.0625, 1.0, 1.0, 0.5555555555555556, 0.0, 0.0, 0.5555555555555556, 0.3, 0.0625, 1.0, 0.0, 0.3333333333333333, 0.6666666666666666, 0.0, 0.4583333333333333, 0.2647058823529412, 0.13953488372093023, 1.0, 0.15384615384615385, 0.058823529411764705, 0.0, 1.0, 0.26666666666666666, 0.047619047619047616, 0.1111111111111111]
    data3 = list(filter(lambda x: x != 1.0, data3))

    data_l = [data1, data2, data3]
    plot_names = ["CER_on_all-stage3.pdf", "CER_on_recognized-stage3.pdf", "CER_on_recognized_words-stage3.pdf"]

    for i, data in enumerate(data_l):
        data = np.array(data)

        ax = plt.subplot()
        ax.hist(data, bins=20, color="blue", edgecolor="black")
        ax.yaxis.set_major_formatter(FormatStrFormatter('%.0f'))

        print(np.sum(data) / len(data))

        plt.xlabel("CER")
        plt.xlim(-0.05, 1.05)
        plt.ylabel("no.")

        plt.gcf().set_size_inches(4, 4)
        plt.savefig("/mnt/HD/School/A4/licenta/docs/doc/prod/img/evaluation/" + plot_names[i])
        plt.show()

# running_time_stage1()
# pixel_reduction_stage1()

# running_time_stage2()
# pixel_reduction_stage2()

# running_time_stage3()
# CERs_stage3()
